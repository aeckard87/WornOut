// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// GetCategoryReader is a Reader for the GetCategory structure.
type GetCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCategoryOK creates a GetCategoryOK with default headers values
func NewGetCategoryOK() *GetCategoryOK {
	return &GetCategoryOK{}
}

/*GetCategoryOK handles this case with default header values.

Status Ok
*/
type GetCategoryOK struct {
	Payload *models.Category
}

func (o *GetCategoryOK) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryOK  %+v", 200, o.Payload)
}

func (o *GetCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Category)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoryBadRequest creates a GetCategoryBadRequest with default headers values
func NewGetCategoryBadRequest() *GetCategoryBadRequest {
	return &GetCategoryBadRequest{}
}

/*GetCategoryBadRequest handles this case with default header values.

Invalid input
*/
type GetCategoryBadRequest struct {
}

func (o *GetCategoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryBadRequest ", 400)
}

func (o *GetCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCategoryNotFound creates a GetCategoryNotFound with default headers values
func NewGetCategoryNotFound() *GetCategoryNotFound {
	return &GetCategoryNotFound{}
}

/*GetCategoryNotFound handles this case with default header values.

No items found
*/
type GetCategoryNotFound struct {
}

func (o *GetCategoryNotFound) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryNotFound ", 404)
}

func (o *GetCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
