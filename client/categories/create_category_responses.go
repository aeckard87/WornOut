// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// CreateCategoryReader is a Reader for the CreateCategory structure.
type CreateCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateCategoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateCategoryCreated creates a CreateCategoryCreated with default headers values
func NewCreateCategoryCreated() *CreateCategoryCreated {
	return &CreateCategoryCreated{}
}

/*CreateCategoryCreated handles this case with default header values.

Category Created
*/
type CreateCategoryCreated struct {
	Payload *models.Category
}

func (o *CreateCategoryCreated) Error() string {
	return fmt.Sprintf("[POST /categories][%d] createCategoryCreated  %+v", 201, o.Payload)
}

func (o *CreateCategoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Category)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCategoryBadRequest creates a CreateCategoryBadRequest with default headers values
func NewCreateCategoryBadRequest() *CreateCategoryBadRequest {
	return &CreateCategoryBadRequest{}
}

/*CreateCategoryBadRequest handles this case with default header values.

Invalid input
*/
type CreateCategoryBadRequest struct {
}

func (o *CreateCategoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /categories][%d] createCategoryBadRequest ", 400)
}

func (o *CreateCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
