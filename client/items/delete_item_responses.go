// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteItemReader is a Reader for the DeleteItem structure.
type DeleteItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteItemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteItemOK creates a DeleteItemOK with default headers values
func NewDeleteItemOK() *DeleteItemOK {
	return &DeleteItemOK{}
}

/*DeleteItemOK handles this case with default header values.

Status Ok
*/
type DeleteItemOK struct {
}

func (o *DeleteItemOK) Error() string {
	return fmt.Sprintf("[DELETE /items/{id}][%d] deleteItemOK ", 200)
}

func (o *DeleteItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteItemNotFound creates a DeleteItemNotFound with default headers values
func NewDeleteItemNotFound() *DeleteItemNotFound {
	return &DeleteItemNotFound{}
}

/*DeleteItemNotFound handles this case with default header values.

No items found
*/
type DeleteItemNotFound struct {
}

func (o *DeleteItemNotFound) Error() string {
	return fmt.Sprintf("[DELETE /items/{id}][%d] deleteItemNotFound ", 404)
}

func (o *DeleteItemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
