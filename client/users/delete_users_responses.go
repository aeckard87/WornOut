// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteUsersReader is a Reader for the DeleteUsers structure.
type DeleteUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUsersOK creates a DeleteUsersOK with default headers values
func NewDeleteUsersOK() *DeleteUsersOK {
	return &DeleteUsersOK{}
}

/*DeleteUsersOK handles this case with default header values.

Status Ok
*/
type DeleteUsersOK struct {
}

func (o *DeleteUsersOK) Error() string {
	return fmt.Sprintf("[DELETE /users][%d] deleteUsersOK ", 200)
}

func (o *DeleteUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersNotFound creates a DeleteUsersNotFound with default headers values
func NewDeleteUsersNotFound() *DeleteUsersNotFound {
	return &DeleteUsersNotFound{}
}

/*DeleteUsersNotFound handles this case with default header values.

No items found
*/
type DeleteUsersNotFound struct {
}

func (o *DeleteUsersNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users][%d] deleteUsersNotFound ", 404)
}

func (o *DeleteUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
