// Code generated by go-swagger; DO NOT EDIT.

package details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDetailsReader is a Reader for the DeleteDetails structure.
type DeleteDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDetailsOK creates a DeleteDetailsOK with default headers values
func NewDeleteDetailsOK() *DeleteDetailsOK {
	return &DeleteDetailsOK{}
}

/*DeleteDetailsOK handles this case with default header values.

Status Ok
*/
type DeleteDetailsOK struct {
}

func (o *DeleteDetailsOK) Error() string {
	return fmt.Sprintf("[DELETE /details][%d] deleteDetailsOK ", 200)
}

func (o *DeleteDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDetailsNotFound creates a DeleteDetailsNotFound with default headers values
func NewDeleteDetailsNotFound() *DeleteDetailsNotFound {
	return &DeleteDetailsNotFound{}
}

/*DeleteDetailsNotFound handles this case with default header values.

No items found
*/
type DeleteDetailsNotFound struct {
}

func (o *DeleteDetailsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /details][%d] deleteDetailsNotFound ", 404)
}

func (o *DeleteDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
