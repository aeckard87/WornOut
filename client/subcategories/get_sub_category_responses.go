// Code generated by go-swagger; DO NOT EDIT.

package subcategories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// GetSubCategoryReader is a Reader for the GetSubCategory structure.
type GetSubCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSubCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSubCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubCategoryOK creates a GetSubCategoryOK with default headers values
func NewGetSubCategoryOK() *GetSubCategoryOK {
	return &GetSubCategoryOK{}
}

/*GetSubCategoryOK handles this case with default header values.

Status Ok
*/
type GetSubCategoryOK struct {
	Payload *models.SubCategory
}

func (o *GetSubCategoryOK) Error() string {
	return fmt.Sprintf("[GET /subcategories/{id}][%d] getSubCategoryOK  %+v", 200, o.Payload)
}

func (o *GetSubCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SubCategory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubCategoryBadRequest creates a GetSubCategoryBadRequest with default headers values
func NewGetSubCategoryBadRequest() *GetSubCategoryBadRequest {
	return &GetSubCategoryBadRequest{}
}

/*GetSubCategoryBadRequest handles this case with default header values.

Invalid input
*/
type GetSubCategoryBadRequest struct {
}

func (o *GetSubCategoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /subcategories/{id}][%d] getSubCategoryBadRequest ", 400)
}

func (o *GetSubCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubCategoryNotFound creates a GetSubCategoryNotFound with default headers values
func NewGetSubCategoryNotFound() *GetSubCategoryNotFound {
	return &GetSubCategoryNotFound{}
}

/*GetSubCategoryNotFound handles this case with default header values.

No items found
*/
type GetSubCategoryNotFound struct {
}

func (o *GetSubCategoryNotFound) Error() string {
	return fmt.Sprintf("[GET /subcategories/{id}][%d] getSubCategoryNotFound ", 404)
}

func (o *GetSubCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
