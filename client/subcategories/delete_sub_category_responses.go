// Code generated by go-swagger; DO NOT EDIT.

package subcategories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSubCategoryReader is a Reader for the DeleteSubCategory structure.
type DeleteSubCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSubCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteSubCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSubCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSubCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSubCategoryOK creates a DeleteSubCategoryOK with default headers values
func NewDeleteSubCategoryOK() *DeleteSubCategoryOK {
	return &DeleteSubCategoryOK{}
}

/*DeleteSubCategoryOK handles this case with default header values.

Status Ok
*/
type DeleteSubCategoryOK struct {
}

func (o *DeleteSubCategoryOK) Error() string {
	return fmt.Sprintf("[DELETE /subcategories/{id}][%d] deleteSubCategoryOK ", 200)
}

func (o *DeleteSubCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSubCategoryBadRequest creates a DeleteSubCategoryBadRequest with default headers values
func NewDeleteSubCategoryBadRequest() *DeleteSubCategoryBadRequest {
	return &DeleteSubCategoryBadRequest{}
}

/*DeleteSubCategoryBadRequest handles this case with default header values.

Invalid input
*/
type DeleteSubCategoryBadRequest struct {
}

func (o *DeleteSubCategoryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /subcategories/{id}][%d] deleteSubCategoryBadRequest ", 400)
}

func (o *DeleteSubCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSubCategoryNotFound creates a DeleteSubCategoryNotFound with default headers values
func NewDeleteSubCategoryNotFound() *DeleteSubCategoryNotFound {
	return &DeleteSubCategoryNotFound{}
}

/*DeleteSubCategoryNotFound handles this case with default header values.

No items found
*/
type DeleteSubCategoryNotFound struct {
}

func (o *DeleteSubCategoryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /subcategories/{id}][%d] deleteSubCategoryNotFound ", 404)
}

func (o *DeleteSubCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
