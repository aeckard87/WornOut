// Code generated by go-swagger; DO NOT EDIT.

package subcategories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// NewCreateSubCategoryByCategoryParams creates a new CreateSubCategoryByCategoryParams object
// with the default values initialized.
func NewCreateSubCategoryByCategoryParams() *CreateSubCategoryByCategoryParams {
	var ()
	return &CreateSubCategoryByCategoryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateSubCategoryByCategoryParamsWithTimeout creates a new CreateSubCategoryByCategoryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateSubCategoryByCategoryParamsWithTimeout(timeout time.Duration) *CreateSubCategoryByCategoryParams {
	var ()
	return &CreateSubCategoryByCategoryParams{

		timeout: timeout,
	}
}

// NewCreateSubCategoryByCategoryParamsWithContext creates a new CreateSubCategoryByCategoryParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateSubCategoryByCategoryParamsWithContext(ctx context.Context) *CreateSubCategoryByCategoryParams {
	var ()
	return &CreateSubCategoryByCategoryParams{

		Context: ctx,
	}
}

// NewCreateSubCategoryByCategoryParamsWithHTTPClient creates a new CreateSubCategoryByCategoryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateSubCategoryByCategoryParamsWithHTTPClient(client *http.Client) *CreateSubCategoryByCategoryParams {
	var ()
	return &CreateSubCategoryByCategoryParams{
		HTTPClient: client,
	}
}

/*CreateSubCategoryByCategoryParams contains all the parameters to send to the API endpoint
for the create sub category by category operation typically these are written to a http.Request
*/
type CreateSubCategoryByCategoryParams struct {

	/*Body
	  Category that needs to be added to the DB

	*/
	Body *models.SubCategory
	/*ID
	  Category ID Associated to Subcategory(s)

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) WithTimeout(timeout time.Duration) *CreateSubCategoryByCategoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) WithContext(ctx context.Context) *CreateSubCategoryByCategoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) WithHTTPClient(client *http.Client) *CreateSubCategoryByCategoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) WithBody(body *models.SubCategory) *CreateSubCategoryByCategoryParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) SetBody(body *models.SubCategory) {
	o.Body = body
}

// WithID adds the id to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) WithID(id int64) *CreateSubCategoryByCategoryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the create sub category by category params
func (o *CreateSubCategoryByCategoryParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *CreateSubCategoryByCategoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body == nil {
		o.Body = new(models.SubCategory)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
