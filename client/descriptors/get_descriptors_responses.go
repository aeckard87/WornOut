// Code generated by go-swagger; DO NOT EDIT.

package descriptors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// GetDescriptorsReader is a Reader for the GetDescriptors structure.
type GetDescriptorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDescriptorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDescriptorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDescriptorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDescriptorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDescriptorsOK creates a GetDescriptorsOK with default headers values
func NewGetDescriptorsOK() *GetDescriptorsOK {
	return &GetDescriptorsOK{}
}

/*GetDescriptorsOK handles this case with default header values.

Status Ok
*/
type GetDescriptorsOK struct {
	Payload models.Descriptors
}

func (o *GetDescriptorsOK) Error() string {
	return fmt.Sprintf("[GET /descriptors][%d] getDescriptorsOK  %+v", 200, o.Payload)
}

func (o *GetDescriptorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDescriptorsBadRequest creates a GetDescriptorsBadRequest with default headers values
func NewGetDescriptorsBadRequest() *GetDescriptorsBadRequest {
	return &GetDescriptorsBadRequest{}
}

/*GetDescriptorsBadRequest handles this case with default header values.

Invalid input
*/
type GetDescriptorsBadRequest struct {
}

func (o *GetDescriptorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /descriptors][%d] getDescriptorsBadRequest ", 400)
}

func (o *GetDescriptorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDescriptorsNotFound creates a GetDescriptorsNotFound with default headers values
func NewGetDescriptorsNotFound() *GetDescriptorsNotFound {
	return &GetDescriptorsNotFound{}
}

/*GetDescriptorsNotFound handles this case with default header values.

No items found
*/
type GetDescriptorsNotFound struct {
}

func (o *GetDescriptorsNotFound) Error() string {
	return fmt.Sprintf("[GET /descriptors][%d] getDescriptorsNotFound ", 404)
}

func (o *GetDescriptorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
