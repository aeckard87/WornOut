// Code generated by go-swagger; DO NOT EDIT.

package descriptors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDescriptorsByDetailReader is a Reader for the DeleteDescriptorsByDetail structure.
type DeleteDescriptorsByDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDescriptorsByDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDescriptorsByDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteDescriptorsByDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDescriptorsByDetailOK creates a DeleteDescriptorsByDetailOK with default headers values
func NewDeleteDescriptorsByDetailOK() *DeleteDescriptorsByDetailOK {
	return &DeleteDescriptorsByDetailOK{}
}

/*DeleteDescriptorsByDetailOK handles this case with default header values.

Status Ok
*/
type DeleteDescriptorsByDetailOK struct {
}

func (o *DeleteDescriptorsByDetailOK) Error() string {
	return fmt.Sprintf("[DELETE /details/{id}/descriptors][%d] deleteDescriptorsByDetailOK ", 200)
}

func (o *DeleteDescriptorsByDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDescriptorsByDetailNotFound creates a DeleteDescriptorsByDetailNotFound with default headers values
func NewDeleteDescriptorsByDetailNotFound() *DeleteDescriptorsByDetailNotFound {
	return &DeleteDescriptorsByDetailNotFound{}
}

/*DeleteDescriptorsByDetailNotFound handles this case with default header values.

No items found
*/
type DeleteDescriptorsByDetailNotFound struct {
}

func (o *DeleteDescriptorsByDetailNotFound) Error() string {
	return fmt.Sprintf("[DELETE /details/{id}/descriptors][%d] deleteDescriptorsByDetailNotFound ", 404)
}

func (o *DeleteDescriptorsByDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
