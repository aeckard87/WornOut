// Code generated by go-swagger; DO NOT EDIT.

package descriptors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aeckard87/WornOut/models"
)

// GetDescriptorReader is a Reader for the GetDescriptor structure.
type GetDescriptorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDescriptorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDescriptorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDescriptorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDescriptorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDescriptorOK creates a GetDescriptorOK with default headers values
func NewGetDescriptorOK() *GetDescriptorOK {
	return &GetDescriptorOK{}
}

/*GetDescriptorOK handles this case with default header values.

Status Ok
*/
type GetDescriptorOK struct {
	Payload *models.Descriptor
}

func (o *GetDescriptorOK) Error() string {
	return fmt.Sprintf("[GET /Descriptors/{id}][%d] getDescriptorOK  %+v", 200, o.Payload)
}

func (o *GetDescriptorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Descriptor)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDescriptorBadRequest creates a GetDescriptorBadRequest with default headers values
func NewGetDescriptorBadRequest() *GetDescriptorBadRequest {
	return &GetDescriptorBadRequest{}
}

/*GetDescriptorBadRequest handles this case with default header values.

Invalid input
*/
type GetDescriptorBadRequest struct {
}

func (o *GetDescriptorBadRequest) Error() string {
	return fmt.Sprintf("[GET /Descriptors/{id}][%d] getDescriptorBadRequest ", 400)
}

func (o *GetDescriptorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDescriptorNotFound creates a GetDescriptorNotFound with default headers values
func NewGetDescriptorNotFound() *GetDescriptorNotFound {
	return &GetDescriptorNotFound{}
}

/*GetDescriptorNotFound handles this case with default header values.

No items found
*/
type GetDescriptorNotFound struct {
}

func (o *GetDescriptorNotFound) Error() string {
	return fmt.Sprintf("[GET /Descriptors/{id}][%d] getDescriptorNotFound ", 404)
}

func (o *GetDescriptorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
