// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/aeckard87/WornOut/models"
)

// CreateCategoryCreatedCode is the HTTP code returned for type CreateCategoryCreated
const CreateCategoryCreatedCode int = 201

/*CreateCategoryCreated Category Created

swagger:response createCategoryCreated
*/
type CreateCategoryCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Category `json:"body,omitempty"`
}

// NewCreateCategoryCreated creates CreateCategoryCreated with default headers values
func NewCreateCategoryCreated() *CreateCategoryCreated {
	return &CreateCategoryCreated{}
}

// WithPayload adds the payload to the create category created response
func (o *CreateCategoryCreated) WithPayload(payload *models.Category) *CreateCategoryCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create category created response
func (o *CreateCategoryCreated) SetPayload(payload *models.Category) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCategoryCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCategoryBadRequestCode is the HTTP code returned for type CreateCategoryBadRequest
const CreateCategoryBadRequestCode int = 400

/*CreateCategoryBadRequest Invalid input

swagger:response createCategoryBadRequest
*/
type CreateCategoryBadRequest struct {
}

// NewCreateCategoryBadRequest creates CreateCategoryBadRequest with default headers values
func NewCreateCategoryBadRequest() *CreateCategoryBadRequest {
	return &CreateCategoryBadRequest{}
}

// WriteResponse to the client
func (o *CreateCategoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
}
