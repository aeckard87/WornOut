// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateCategoryHandlerFunc turns a function with the right signature into a create category handler
type CreateCategoryHandlerFunc func(CreateCategoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateCategoryHandlerFunc) Handle(params CreateCategoryParams) middleware.Responder {
	return fn(params)
}

// CreateCategoryHandler interface for that can handle valid create category params
type CreateCategoryHandler interface {
	Handle(CreateCategoryParams) middleware.Responder
}

// NewCreateCategory creates a new http.Handler for the create category operation
func NewCreateCategory(ctx *middleware.Context, handler CreateCategoryHandler) *CreateCategory {
	return &CreateCategory{Context: ctx, Handler: handler}
}

/*CreateCategory swagger:route POST /categories Categories createCategory

Create a Category

*/
type CreateCategory struct {
	Context *middleware.Context
	Handler CreateCategoryHandler
}

func (o *CreateCategory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateCategoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
