// Code generated by go-swagger; DO NOT EDIT.

package details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetDetailsHandlerFunc turns a function with the right signature into a get details handler
type GetDetailsHandlerFunc func(GetDetailsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDetailsHandlerFunc) Handle(params GetDetailsParams) middleware.Responder {
	return fn(params)
}

// GetDetailsHandler interface for that can handle valid get details params
type GetDetailsHandler interface {
	Handle(GetDetailsParams) middleware.Responder
}

// NewGetDetails creates a new http.Handler for the get details operation
func NewGetDetails(ctx *middleware.Context, handler GetDetailsHandler) *GetDetails {
	return &GetDetails{Context: ctx, Handler: handler}
}

/*GetDetails swagger:route GET /details Details getDetails

Get all details

*/
type GetDetails struct {
	Context *middleware.Context
	Handler GetDetailsHandler
}

func (o *GetDetails) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetDetailsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
