// Code generated by go-swagger; DO NOT EDIT.

package subcategories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetSubCategoryHandlerFunc turns a function with the right signature into a get sub category handler
type GetSubCategoryHandlerFunc func(GetSubCategoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSubCategoryHandlerFunc) Handle(params GetSubCategoryParams) middleware.Responder {
	return fn(params)
}

// GetSubCategoryHandler interface for that can handle valid get sub category params
type GetSubCategoryHandler interface {
	Handle(GetSubCategoryParams) middleware.Responder
}

// NewGetSubCategory creates a new http.Handler for the get sub category operation
func NewGetSubCategory(ctx *middleware.Context, handler GetSubCategoryHandler) *GetSubCategory {
	return &GetSubCategory{Context: ctx, Handler: handler}
}

/*GetSubCategory swagger:route GET /subcategories/{id} Subcategories getSubCategory

Get a specific SubCategory

*/
type GetSubCategory struct {
	Context *middleware.Context
	Handler GetSubCategoryHandler
}

func (o *GetSubCategory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSubCategoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
