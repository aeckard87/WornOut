// Code generated by go-swagger; DO NOT EDIT.

package subcategories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateSubCategoryByCategoryHandlerFunc turns a function with the right signature into a create sub category by category handler
type CreateSubCategoryByCategoryHandlerFunc func(CreateSubCategoryByCategoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateSubCategoryByCategoryHandlerFunc) Handle(params CreateSubCategoryByCategoryParams) middleware.Responder {
	return fn(params)
}

// CreateSubCategoryByCategoryHandler interface for that can handle valid create sub category by category params
type CreateSubCategoryByCategoryHandler interface {
	Handle(CreateSubCategoryByCategoryParams) middleware.Responder
}

// NewCreateSubCategoryByCategory creates a new http.Handler for the create sub category by category operation
func NewCreateSubCategoryByCategory(ctx *middleware.Context, handler CreateSubCategoryByCategoryHandler) *CreateSubCategoryByCategory {
	return &CreateSubCategoryByCategory{Context: ctx, Handler: handler}
}

/*CreateSubCategoryByCategory swagger:route POST /categories/{id}/subcategories Subcategories createSubCategoryByCategory

Create a SubCategory by Category

*/
type CreateSubCategoryByCategory struct {
	Context *middleware.Context
	Handler CreateSubCategoryByCategoryHandler
}

func (o *CreateSubCategoryByCategory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateSubCategoryByCategoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
