// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteItemsByOwnerHandlerFunc turns a function with the right signature into a delete items by owner handler
type DeleteItemsByOwnerHandlerFunc func(DeleteItemsByOwnerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteItemsByOwnerHandlerFunc) Handle(params DeleteItemsByOwnerParams) middleware.Responder {
	return fn(params)
}

// DeleteItemsByOwnerHandler interface for that can handle valid delete items by owner params
type DeleteItemsByOwnerHandler interface {
	Handle(DeleteItemsByOwnerParams) middleware.Responder
}

// NewDeleteItemsByOwner creates a new http.Handler for the delete items by owner operation
func NewDeleteItemsByOwner(ctx *middleware.Context, handler DeleteItemsByOwnerHandler) *DeleteItemsByOwner {
	return &DeleteItemsByOwner{Context: ctx, Handler: handler}
}

/*DeleteItemsByOwner swagger:route DELETE /users/{id}/items Items deleteItemsByOwner

Delete an Item

*/
type DeleteItemsByOwner struct {
	Context *middleware.Context
	Handler DeleteItemsByOwnerHandler
}

func (o *DeleteItemsByOwner) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteItemsByOwnerParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
