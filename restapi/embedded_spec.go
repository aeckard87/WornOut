// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Item API to help define a thing belonging to users, for example clothing.",
    "title": "Worn Out",
    "contact": {
      "email": "a.eckard@hotmail.com"
    },
    "version": "1.0"
  },
  "host": "localhost:9000",
  "basePath": "/v1",
  "paths": {
    "/categories/{id}/subcategories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Get all SubCategories by Category",
        "operationId": "getSubCategoriesByCategory",
        "parameters": [
          {
            "type": "integer",
            "description": "Category ID Associated to Subcategory(s)",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/SubCategories"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Create a SubCategory by Category",
        "operationId": "createSubCategoryByCategory",
        "parameters": [
          {
            "type": "integer",
            "description": "Category ID Associated to Subcategory(s)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Category that needs to be added to the DB",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "SubCategory Created",
            "schema": {
              "$ref": "#/definitions/SubCategory"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "description": "removes all subcategories from a given category.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Delete all SubCategories By Category",
        "operationId": "deleteSubCategoriesByCategory",
        "parameters": [
          {
            "type": "integer",
            "description": "Category ID Associated to Subcategory(s)",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Create a Category",
        "operationId": "createCategory",
        "parameters": [
          {
            "description": "Category that needs to be added to the DB",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category Created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "description": "a category deletion will also remove all of its subcategories.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Delete all Categories",
        "operationId": "deleteCategories",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Get a specific Category",
        "operationId": "getCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Update a specific Category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "a category that needs to be updated",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category Created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "description": "A category deletion will also remove all of its subcategories.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Categories"
        ],
        "summary": "Delete Category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/descriptors": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Get all Descriptors",
        "operationId": "getDescriptors",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Descriptors"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Delete all Descriptors",
        "operationId": "deleteDescriptors",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/descriptors/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Get a specific Descriptor",
        "operationId": "getDescriptor",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Update a specific Descriptor",
        "operationId": "updateDescriptor",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "a descriptor that will be updated",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Descriptor Updated",
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Delete Descriptor",
        "operationId": "deleteDescriptor",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/details": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Get all details",
        "operationId": "getDetails",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Details"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Create a Detail",
        "operationId": "createDetail",
        "parameters": [
          {
            "description": "Detail that will be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Detail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category Created",
            "schema": {
              "$ref": "#/definitions/Detail"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "description": "a details deletion will also remove all of its descriptors.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Delete all Details",
        "operationId": "deleteDetails",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/details/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Get a specific Detail",
        "operationId": "getDetail",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Detail"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Update a specific Detail",
        "operationId": "updateDetail",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "a detail that will be updated",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Detail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Detail Updated",
            "schema": {
              "$ref": "#/definitions/Detail"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "description": "A detail deletion will also remove all of its descriptors.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Details"
        ],
        "summary": "Delete Detail",
        "operationId": "deleteDetail",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/details/{id}/descriptors": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Get all Descriptors by Detail",
        "operationId": "getDescriptorsByDetail",
        "parameters": [
          {
            "type": "integer",
            "description": "Detail ID Associated with descriptor(s)",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Descriptors"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Create a Descriptor by Detail",
        "operationId": "createDescriptorByDetail",
        "parameters": [
          {
            "type": "integer",
            "description": "Detail ID Associated with descriptor(s)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Descriptor that will be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Descriptor Created",
            "schema": {
              "$ref": "#/definitions/Descriptor"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Descriptors"
        ],
        "summary": "Delete all Descriptors by Detail",
        "operationId": "deleteDescriptorsByDetail",
        "parameters": [
          {
            "type": "integer",
            "description": "Detail ID Associated with descriptor(s)",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/items": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Get all Items",
        "operationId": "getItems",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Delete all Items",
        "operationId": "deleteItems",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Get specific Item",
        "operationId": "getItem",
        "parameters": [
          {
            "type": "integer",
            "description": "Item ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "update an Item",
        "operationId": "updateItem",
        "parameters": [
          {
            "type": "integer",
            "description": "Item ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category Created",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Delete an Item",
        "operationId": "deleteItem",
        "parameters": [
          {
            "type": "integer",
            "description": "Item ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/subcategories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Get all SubCategories",
        "operationId": "getSubCategories",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/SubCategories"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "description": "removes all subcategories.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Delete all SubCategories",
        "operationId": "deleteSubCategories",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/subcategories/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Get a specific SubCategory",
        "operationId": "getSubCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/SubCategory"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Update a specific SubCategory",
        "operationId": "updateSubCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "a subcategory that will be updated",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "SubCategory Updated",
            "schema": {
              "$ref": "#/definitions/SubCategory"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "description": "removes a specfic subcategory.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subcategories"
        ],
        "summary": "Delete a specific SubCategory",
        "operationId": "deleteSubCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/subcategories/{id}/items": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Get all Items by Subcategory",
        "operationId": "getItemsBySubCategory",
        "parameters": [
          {
            "type": "integer",
            "description": "SubCategory ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Delete an Item",
        "operationId": "deleteItemsBySubCategory",
        "parameters": [
          {
            "type": "integer",
            "description": "SubCategory ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Create a User",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "User that needs to be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Delete all Users",
        "operationId": "deleteUsers",
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get a specific User",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Update a specific User",
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "a user that needs to be updated",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    },
    "/users/{id}/items": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Get all Items by Owner",
        "operationId": "getItemsByOwner",
        "parameters": [
          {
            "type": "integer",
            "description": "Owner's ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "No items found"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Create an Item",
        "operationId": "createItem",
        "parameters": [
          {
            "type": "integer",
            "description": "Owner's ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category Created",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Items"
        ],
        "summary": "Delete an Item",
        "operationId": "deleteItemsByOwner",
        "parameters": [
          {
            "type": "integer",
            "description": "Item ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Status Ok"
          },
          "404": {
            "description": "No items found"
          }
        }
      }
    }
  },
  "definitions": {
    "Categories": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Category"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "example": "Top"
        },
        "id": {
          "type": "integer",
          "example": 10
        }
      }
    },
    "Descriptor": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "string",
          "example": "Ralph Lauren"
        },
        "detailId": {
          "type": "integer",
          "example": 10
        },
        "id": {
          "type": "integer",
          "example": 89
        }
      }
    },
    "Descriptors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Descriptor"
      }
    },
    "Detail": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string",
          "example": "Brand"
        },
        "id": {
          "type": "integer",
          "example": 25
        }
      }
    },
    "Details": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Detail"
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "descriptions": {
          "$ref": "#/definitions/Descriptors"
        },
        "id": {
          "type": "integer",
          "example": 10
        },
        "name": {
          "type": "string",
          "example": "Red Short Sleeve Top"
        },
        "subCategoryID": {
          "type": "integer",
          "example": 40
        },
        "userID": {
          "type": "integer",
          "example": 40
        }
      }
    },
    "Items": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Item"
      }
    },
    "SubCategories": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubCategory"
      }
    },
    "SubCategory": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "integer",
          "example": 10
        },
        "id": {
          "type": "integer",
          "example": 290
        },
        "subcategory": {
          "type": "string",
          "example": "Short Sleeve"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  },
  "tags": [
    {
      "name": "Categories"
    },
    {
      "name": "Subcategories"
    },
    {
      "name": "Details"
    },
    {
      "name": "Descriptors"
    },
    {
      "name": "Users"
    }
  ]
}`))
}
